{"ast":null,"code":"const CACHE_NAME = \"version-1\";\nconst urlsToCache = [\"index.html\", \"offline.html\"];\nconst self = this;\n\n// Install SW\n\nself.addEventListener(\"install\", event => {\n  event.waitUntil(caches.open(CACHE_NAME).then(cache => {\n    console.log(\"Opened cache\");\n    return cache.addAll(urlsToCache);\n  }));\n});\n\n// Listen for requests\n\nself.addEventListener(\"fetch\", event => {\n  event.respondWith(caches.match(event.request).then(() => {\n    return fetch(event.request).catch(() => caches.match(\"offline.html\"));\n  }));\n});\n\n// Activate the SW\n\nself.addEventListener(\"activate\", event => {\n  const cacheWhitelist = [];\n  cacheWhitelist.push(CACHE_NAME);\n  event.waitUntil(caches.keys().then(cacheNames => Promise.all(cacheNames.map(cacheName => {\n    if (!cacheWhitelist.includes(cacheName)) {\n      return caches.delete(cacheName);\n    }\n  }))));\n});","map":{"version":3,"names":["CACHE_NAME","urlsToCache","self","addEventListener","event","waitUntil","caches","open","then","cache","console","log","addAll","respondWith","match","request","fetch","catch","cacheWhitelist","push","keys","cacheNames","Promise","all","map","cacheName","includes","delete"],"sources":["D:/project/gravitycareerinstitute/frontend/src/serviceworker.js"],"sourcesContent":["const CACHE_NAME = \"version-1\";\r\nconst urlsToCache = [\"index.html\", \"offline.html\"];\r\nconst self = this;\r\n\r\n// Install SW\r\n\r\nself.addEventListener(\"install\", (event) => {\r\n  event.waitUntil(\r\n    caches.open(CACHE_NAME).then((cache) => {\r\n      console.log(\"Opened cache\");\r\n\r\n      return cache.addAll(urlsToCache);\r\n    })\r\n  );\r\n});\r\n\r\n// Listen for requests\r\n\r\nself.addEventListener(\"fetch\", (event) => {\r\n  event.respondWith(\r\n    caches.match(event.request).then(() => {\r\n      return fetch(event.request).catch(() => caches.match(\"offline.html\"));\r\n    })\r\n  );\r\n});\r\n\r\n// Activate the SW\r\n\r\nself.addEventListener(\"activate\", (event) => {\r\n  const cacheWhitelist = [];\r\n\r\n  cacheWhitelist.push(CACHE_NAME);\r\n\r\n  event.waitUntil(\r\n    caches.keys().then((cacheNames) =>\r\n      Promise.all(\r\n        cacheNames.map((cacheName) => {\r\n          if (!cacheWhitelist.includes(cacheName)) {\r\n            return caches.delete(cacheName);\r\n          }\r\n        })\r\n      )\r\n    )\r\n  );\r\n});\r\n"],"mappings":"AAAA,MAAMA,UAAU,GAAG,WAAW;AAC9B,MAAMC,WAAW,GAAG,CAAC,YAAY,EAAE,cAAc,CAAC;AAClD,MAAMC,IAAI,GAAG,IAAI;;AAEjB;;AAEAA,IAAI,CAACC,gBAAgB,CAAC,SAAS,EAAGC,KAAK,IAAK;EAC1CA,KAAK,CAACC,SAAS,CACbC,MAAM,CAACC,IAAI,CAACP,UAAU,CAAC,CAACQ,IAAI,CAAEC,KAAK,IAAK;IACtCC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAE3B,OAAOF,KAAK,CAACG,MAAM,CAACX,WAAW,CAAC;EAClC,CAAC,CAAC,CACH;AACH,CAAC,CAAC;;AAEF;;AAEAC,IAAI,CAACC,gBAAgB,CAAC,OAAO,EAAGC,KAAK,IAAK;EACxCA,KAAK,CAACS,WAAW,CACfP,MAAM,CAACQ,KAAK,CAACV,KAAK,CAACW,OAAO,CAAC,CAACP,IAAI,CAAC,MAAM;IACrC,OAAOQ,KAAK,CAACZ,KAAK,CAACW,OAAO,CAAC,CAACE,KAAK,CAAC,MAAMX,MAAM,CAACQ,KAAK,CAAC,cAAc,CAAC,CAAC;EACvE,CAAC,CAAC,CACH;AACH,CAAC,CAAC;;AAEF;;AAEAZ,IAAI,CAACC,gBAAgB,CAAC,UAAU,EAAGC,KAAK,IAAK;EAC3C,MAAMc,cAAc,GAAG,EAAE;EAEzBA,cAAc,CAACC,IAAI,CAACnB,UAAU,CAAC;EAE/BI,KAAK,CAACC,SAAS,CACbC,MAAM,CAACc,IAAI,EAAE,CAACZ,IAAI,CAAEa,UAAU,IAC5BC,OAAO,CAACC,GAAG,CACTF,UAAU,CAACG,GAAG,CAAEC,SAAS,IAAK;IAC5B,IAAI,CAACP,cAAc,CAACQ,QAAQ,CAACD,SAAS,CAAC,EAAE;MACvC,OAAOnB,MAAM,CAACqB,MAAM,CAACF,SAAS,CAAC;IACjC;EACF,CAAC,CAAC,CACH,CACF,CACF;AACH,CAAC,CAAC"},"metadata":{},"sourceType":"module"}